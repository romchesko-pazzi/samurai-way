import { memo } from 'react';

export const SvgSelector = memo(({ id }: PropsType) => {
  switch (id) {
    case 'edit':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none">
          <path
            fill="#000"
            d="M15.5 1.4c1.2-.1 2.4.4 3.6 1.5 1.2 1.1 1.7 2.3 1.6 3.5 0 1.1-.7 2-1.5 2.9m0 0L11 17.9l-.8.7c-.3.1-.6.3-1 .3l-3.2.6c-.8.1-1.5 0-2-.6-.6-.5-.8-1.2-.7-2l.3-3.3.3-1 .6-.8L12.7 3c.8-.8 1.7-1.5 2.8-1.7m-1.7 2.7-8.2 8.7-.3.5a2 2 0 0 0-.2.5L4.8 17c0 .4 0 .7.2.8.1.2.4.3.8.2l3.2-.6c.1 0 .3 0 .5-.2.2 0 .4-.2.4-.3l8.3-8.7c.6-.7 1-1.3 1-2C19.2 5.8 19 5 18 4c-1-1-1.7-1.1-2.3-1-.6 0-1.2.4-1.9 1.1Z"
          />
          <path
            fill="#000"
            d="M11.8 4.3c.4 0 .8.2.8.6a5.4 5.4 0 0 0 4.8 4.6.8.8 0 0 1-.1 1.4A6.9 6.9 0 0 1 11 5.2c0-.4.3-.8.7-.9ZM2.3 22c0-.4.3-.8.7-.8h18a.8.8 0 0 1 0 1.6H3a.8.8 0 0 1-.8-.8Z"
          />
        </svg>
      );
    case 'uploadPhoto':
      return (
        <svg
          width="16"
          height="12"
          viewBox="0 0 16 12"
          fill="white"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M8.00002 8.84441C9.3746 8.84441 10.4889 7.7301 10.4889 6.35552C10.4889 4.98095 9.3746 3.86663 8.00002 3.86663C6.62545 3.86663 5.51113 4.98095 5.51113 6.35552C5.51113 7.7301 6.62545 8.84441 8.00002 8.84441ZM8.00002 8.22219C9.03095 8.22219 9.86669 7.38646 9.86669 6.35552C9.86669 5.32459 9.03095 4.48886 8.00002 4.48886C6.96909 4.48886 6.13336 5.32459 6.13336 6.35552C6.13336 7.38646 6.96909 8.22219 8.00002 8.22219Z"
            fill="white"
          />
          <path
            fillRule="evenodd"
            clipRule="evenodd"
            d="M10.9969 1.37775C10.2512 0.692332 9.56425 0.133301 7.97795 0.133301C6.39166 0.133301 5.70468 0.692332 4.95903 1.37775H2.40002C1.36909 1.37775 0.533356 2.21348 0.533356 3.24441V9.46663C0.533356 10.4976 1.36909 11.3333 2.40002 11.3333H13.6C14.631 11.3333 15.4667 10.4976 15.4667 9.46663V3.24441C15.4667 2.21348 14.631 1.37775 13.6 1.37775H10.9969ZM10.7535 1.99997L10.6882 1.93964C10.6261 1.8822 10.566 1.82659 10.5087 1.77441C10.2747 1.56109 10.0669 1.38384 9.84291 1.23658C9.42067 0.959018 8.89216 0.755523 7.97795 0.755523C7.06374 0.755523 6.53523 0.959018 6.113 1.23658C5.88898 1.38384 5.68124 1.56109 5.4472 1.77441C5.38984 1.82669 5.32994 1.88208 5.26768 1.93963L5.2024 1.99997H2.40002C1.71273 1.99997 1.15558 2.55712 1.15558 3.24441V9.46663C1.15558 10.1539 1.71273 10.7111 2.40002 10.7111H13.6C14.2873 10.7111 14.8445 10.1539 14.8445 9.46663V3.24441C14.8445 2.55712 14.2873 1.99997 13.6 1.99997H10.7535Z"
            fill="white"
          />
        </svg>
      );
    case 'search':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none">
          <path
            fill="#000"
            d="M21.7 20.3 18 16.6a9 9 0 1 0-1.4 1.4l3.7 3.7 1.4-1.4ZM11 18a7 7 0 1 1 0-14 7 7 0 0 1 0 14Z"
          />
        </svg>
      );
    case 'cross':
      return (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="15"
          viewBox="0 0 11 11"
        >
          <path d="m2.2 1.19 3.3 3.3L8.8 1.2a.6699.6699 0 0 1 .5-.2.7499.7499 0 0 1 .7.7.6603.6603 0 0 1-.2.48L6.49 5.5 9.8 8.82a.6603.6603 0 0 1 .2.48.7499.7499 0 0 1-.7.7.6699.6699 0 0 1-.5-.2L5.5 6.51 2.21 9.8a.6699.6699 0 0 1-.5.2.7501.7501 0 0 1-.71-.71.6603.6603 0 0 1 .2-.48L4.51 5.5 1.19 2.18A.6597.6597 0 0 1 1 1.7a.7499.7499 0 0 1 .7-.7.6702.6702 0 0 1 .5.19z" />
        </svg>
      );
    default:
      return <svg />;
  }
});

type PropsType = {
  id: string;
};
